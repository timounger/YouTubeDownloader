#------------------------------------------------------------------------------
# Import labels to GitHub project
# File to Import: '.github/issues/labels.yml'
#------------------------------------------------------------------------------
name: Import Labels

#------------------------------------------------------------------------------
# Token Permission
#------------------------------------------------------------------------------
permissions:
  actions: write
  checks: write
  contents: write
  deployments: none
  id-token: none
  issues: write
  discussions: none
  packages: none
  pages: write
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: write

defaults:
  run:
    shell: cmd

env:
  LABELS_FILE: .github/issues/labels.yml

#--------------------------------------------------------------------------------
# WORKFLOW TRIGGER
#--------------------------------------------------------------------------------
on:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

#--------------------------------------------------------------------------------
# WORKFLOW JOBS
#--------------------------------------------------------------------------------
jobs:
  import_labels:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14  # Wählen Sie die gewünschte Node.js-Version aus

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Import Labels
        run: |
          const core = require('@actions/core');
          const { Octokit } = require('@octokit/rest');
          const fs = require('fs');

          const token = core.getInput('github-token');
          const octokit = new Octokit({ auth: token });
          const owner = core.getInput('repository-owner');
          const repo = core.getInput('repository-name');

          try {
            const labels = yaml.safeLoad(fs.readFileSync(${{ env.LABELS_FILE }}, 'utf8'));

            for (const label of labels.labels) {
              octokit.issues.createLabel({
                owner,
                repo,
                name: label.name,
                color: label.color,
                description: label.description
              });
            }
          } catch (error) {
            core.setFailed(error.message);
          }

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository-owner: Timo Unger  # GitHub-Benutzername des Repository-Eigentümers
          repository-name: YouTubeDownloader # Name Ihres Repositories
